name: 'Quality Check'

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
  code-quality:
    runs-on: ubuntu-latest
    name: 'Code Quality Check'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript type checking
      run: npm run type-check
      
    - name: Check package vulnerabilities
      run: npm audit --audit-level=high
      
    - name: Test build process
      run: npm run build
      env:
        VITE_API_URL: https://api-staging.vibesplit.com
        
    - name: Check bundle size
      run: |
        BUNDLE_SIZE=$(du -s dist/ | cut -f1)
        echo "Bundle size: ${BUNDLE_SIZE}KB"
        
        if [ $BUNDLE_SIZE -gt 51200 ]; then  # 50MB limit
          echo "‚ùå Bundle size too large: ${BUNDLE_SIZE}KB"
          echo "Consider code splitting or removing unused dependencies"
          exit 1
        else
          echo "‚úÖ Bundle size is acceptable: ${BUNDLE_SIZE}KB"
        fi
        
    - name: Comment bundle size on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const { execSync } = require('child_process');
          
          const bundleSize = execSync('du -s dist/ | cut -f1').toString().trim();
          
          const comment = `## üì¶ Bundle Analysis
          
          **Bundle Size**: ${bundleSize}KB
          
          ${bundleSize > 51200 ? '‚ùå **Warning**: Bundle size exceeds 50MB limit!' : '‚úÖ Bundle size is within acceptable limits'}
          
          ### Build artifacts:
          - ‚úÖ index.html
          - ‚úÖ manifest.json
          - ‚úÖ Service Worker
          
          *Generated automatically by GitHub Actions*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ PWA —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
  pwa-audit:
    runs-on: ubuntu-latest
    name: 'PWA Audit'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        VITE_API_URL: https://api-staging.vibesplit.com
        
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli
      
    - name: Serve built app
      run: |
        npm run preview &
        sleep 10
      
    - name: Run Lighthouse CI
      run: lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
    - name: Check PWA requirements
      run: |
        echo "üîç Checking PWA requirements..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö PWA —Ñ–∞–π–ª–æ–≤
        if [ ! -f "dist/manifest.json" ]; then
          echo "‚ùå manifest.json not found"
          exit 1
        fi
        
        if [ ! -f "dist/sw.js" ]; then
          echo "‚ùå Service Worker not found"
          exit 1
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
        if ! grep -q '"name"' dist/manifest.json; then
          echo "‚ùå manifest.json missing required 'name' field"
          exit 1
        fi
        
        if ! grep -q '"start_url"' dist/manifest.json; then
          echo "‚ùå manifest.json missing required 'start_url' field"
          exit 1
        fi
        
        if ! grep -q '"icons"' dist/manifest.json; then
          echo "‚ùå manifest.json missing required 'icons' field"
          exit 1
        fi
        
        echo "‚úÖ PWA requirements check passed"

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  security-audit:
    runs-on: ubuntu-latest
    name: 'Security Audit'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        
    - name: Scan for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD